version: '3.9'
services: 
  web:
    build: .
    ports: 
      - '8000:8000'
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    depends_on:
      - postgres
      - influxdb
      - celery
      - celery-beat
      - redis
    env_file:
      - ./.env

  frontend:
    restart: always
    command : npm start
    container_name: front
    build:
      context: ./front/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./front:/app/front
    env_file:
      - ./.env

  redis:
    image: "redis:alpine"

  postgres:
    image: postgres:14.4
    ports: 
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  influxdb:
    image: influxdb:latest
    restart: always
    ports: 
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb2
    env_file:
      - ./.env

  celery:
    build: .
    command: celery -A CryptoProject worker -l info
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
    env_file:
      - ./.env

  celery-beat:
    build: .
    command: celery -A CryptoProject beat -l info
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
    env_file:
      - ./.env
  

volumes:
  postgres_data:
  influxdb-storage:
